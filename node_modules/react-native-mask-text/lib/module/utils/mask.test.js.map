{"version":3,"sources":["mask.test.ts"],"names":["mask","unMask","test","expected","received","expect","toBe","prefix","decimalSeparator","groupSeparator","precision"],"mappings":"AAAA,SAASA,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AAEAC,IAAI,CAAC,uCAAD,EAA0C,MAAM;AAClD,QAAMC,QAAQ,GAAG,gBAAjB;AACA,QAAMC,QAAQ,GAAGJ,IAAI,CAAC,aAAD,EAAgB,gBAAhB,CAArB;AAEAK,EAAAA,MAAM,CAACD,QAAD,CAAN,CAAiBE,IAAjB,CAAsBH,QAAtB;AACD,CALG,CAAJ;AAOAD,IAAI,CAAC,gCAAD,EAAmC,MAAM;AAC3C,QAAMC,QAAQ,GAAG,cAAjB;AACA,QAAMC,QAAQ,GAAGJ,IAAI,CAAC,cAAD,EAAiB,cAAjB,CAArB;AAEAK,EAAAA,MAAM,CAACD,QAAD,CAAN,CAAiBE,IAAjB,CAAsBH,QAAtB;AACD,CALG,CAAJ;AAOAD,IAAI,CAAC,uCAAD,EAA0C,MAAM;AAClD,QAAMC,QAAQ,GAAG,SAAjB;AACA,QAAMC,QAAQ,GAAGJ,IAAI,CAAC,SAAD,EAAY,SAAZ,CAArB;AAEAK,EAAAA,MAAM,CAACD,QAAD,CAAN,CAAiBE,IAAjB,CAAsBH,QAAtB;AACD,CALG,CAAJ;AAOAD,IAAI,CAAC,gCAAD,EAAmC,MAAM;AAC3C,QAAMC,QAAQ,GAAG,QAAjB;AACA,QAAMC,QAAQ,GAAGJ,IAAI,CAAC,MAAD,EAAS,EAAT,EAAa,UAAb,EAAyB;AAC5CO,IAAAA,MAAM,EAAE,GADoC;AAE5CC,IAAAA,gBAAgB,EAAE,GAF0B;AAG5CC,IAAAA,cAAc,EAAE,GAH4B;AAI5CC,IAAAA,SAAS,EAAE;AAJiC,GAAzB,CAArB;AAOAL,EAAAA,MAAM,CAACD,QAAD,CAAN,CAAiBE,IAAjB,CAAsBH,QAAtB;AACD,CAVG,CAAJ;AAYAD,IAAI,CAAC,oBAAD,EAAuB,MAAM;AAC/B,QAAMC,QAAQ,GAAG,aAAjB;AACA,QAAMC,QAAQ,GAAGH,MAAM,CAAC,gBAAD,CAAvB;AAEAI,EAAAA,MAAM,CAACD,QAAD,CAAN,CAAiBE,IAAjB,CAAsBH,QAAtB;AACD,CALG,CAAJ;AAOAD,IAAI,CAAC,wBAAD,EAA2B,MAAM;AACnC,QAAMC,QAAQ,GAAG,MAAjB;AACA,QAAMC,QAAQ,GAAGH,MAAM,CAAC,QAAD,EAAW,UAAX,CAAvB;AAEAI,EAAAA,MAAM,CAACD,QAAD,CAAN,CAAiBE,IAAjB,CAAsBH,QAAtB;AACD,CALG,CAAJ","sourcesContent":["import { mask, unMask } from './mask'\n\ntest('should mask with number digit pattern', () => {\n  const expected = '342.934.480-80'\n  const received = mask('34293448080', '999.999.999-99')\n\n  expect(received).toBe(expected)\n})\n\ntest('should mask with alpha pattern', () => {\n  const expected = 'react-native'\n  const received = mask('react native', 'AAAAA-AAAAAA')\n\n  expect(received).toBe(expected)\n})\n\ntest('should mask with alphanumeric pattern', () => {\n  const expected = 'rct-777'\n  const received = mask('rct 777', 'AAA-999')\n\n  expect(received).toBe(expected)\n})\n\ntest('should mask with currency mask', () => {\n  const expected = '$59.99'\n  const received = mask('5999', '', 'currency', {\n    prefix: '$',\n    decimalSeparator: '.',\n    groupSeparator: ',',\n    precision: 2,\n  })\n\n  expect(received).toBe(expected)\n})\n\ntest('should unMask text', () => {\n  const expected = '34293448080'\n  const received = unMask('342.934.480-80')\n\n  expect(received).toBe(expected)\n})\n\ntest('should unMask currency', () => {\n  const expected = '5999'\n  const received = unMask('$59.99', 'currency')\n\n  expect(received).toBe(expected)\n})\n"]}