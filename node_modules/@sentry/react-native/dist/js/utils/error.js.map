{"version":3,"file":"error.js","sourceRoot":"","sources":["../../../src/js/utils/error.ts"],"names":[],"mappings":"AAIA,mDAAmD;AACnD,oIAAoI;AACpI,0CAA0C;AAC1C,MAAM,0BAA0B,GAAG,CAAC,CAAC;AACrC,MAAM,4BAA4B,GAAG,CAAC,GAAG,0BAA0B,CAAC;AAEpE;;GAEG;AACH,MAAM,UAAU,oBAAoB,CAAC,cAAsB,CAAC;IAC1D,MAAM,KAAK,GAAkB,IAAI,KAAK,EAAE,CAAC;IACzC,KAAK,CAAC,WAAW,GAAG,WAAW,GAAG,4BAA4B,CAAC,CAAC,+CAA+C;IAC/G,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,cAAc,CAAC,KAAoB;IACjD,OAAO,KAAK,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,WAAW,CAAC,cAAuB;IACjD,OAAO,CACL,cAAc,KAAK,IAAI;QACvB,OAAO,cAAc,KAAK,QAAQ;QAClC,OAAO,IAAI,cAAc;QACzB,OAAO,cAAc,CAAC,KAAK,KAAK,QAAQ,CACzC,CAAC;AACJ,CAAC","sourcesContent":["export interface ExtendedError extends Error {\n  framesToPop?: number | undefined;\n}\n\n// Sentry Stack Parser is skipping lines not frames\n// https://github.com/getsentry/sentry-javascript/blob/739d904342aaf9327312f409952f14ceff4ae1ab/packages/utils/src/stacktrace.ts#L23\n// 1 for first line with the Error message\nconst SENTRY_STACK_PARSER_OFFSET = 1;\nconst REMOVE_ERROR_CREATION_FRAMES = 2 + SENTRY_STACK_PARSER_OFFSET;\n\n/**\n * Creates synthetic trace. By default pops 2 frames - `createSyntheticError` and the caller\n */\nexport function createSyntheticError(framesToPop: number = 0): ExtendedError {\n  const error: ExtendedError = new Error();\n  error.framesToPop = framesToPop + REMOVE_ERROR_CREATION_FRAMES; // Skip createSyntheticError's own stack frame.\n  return error;\n}\n\n/**\n * Returns the number of frames to pop from the stack trace.\n * @param error ExtendedError\n */\nexport function getFramesToPop(error: ExtendedError): number {\n  return error.framesToPop !== undefined ? error.framesToPop : 0;\n}\n\n/**\n * Check if `potentialError` is an object with string stack property.\n */\nexport function isErrorLike(potentialError: unknown): potentialError is { stack: string } {\n  return (\n    potentialError !== null &&\n    typeof potentialError === 'object' &&\n    'stack' in potentialError &&\n    typeof potentialError.stack === 'string'\n  );\n}\n"]}