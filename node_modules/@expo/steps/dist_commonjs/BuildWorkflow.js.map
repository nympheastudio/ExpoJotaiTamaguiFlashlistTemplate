{"version":3,"file":"BuildWorkflow.js","sourceRoot":"","sources":["../src/BuildWorkflow.ts"],"names":[],"mappings":";;;AAIA,MAAa,aAAa;IAIxB;IACE,wFAAwF;IACvE,GAA2B,EAC5C,EAAE,UAAU,EAAE,cAAc,EAAkE;QAD7E,QAAG,GAAH,GAAG,CAAwB;QAG5C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACvC,CAAC;IAEM,KAAK,CAAC,YAAY;QACvB,IAAI,UAAU,GAAiB,IAAI,CAAC;QACpC,IAAI,wBAAwB,GAAG,KAAK,CAAC;QACrC,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YACnC,IAAI,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,EAAE,CAAC;gBACrD,IAAI,CAAC;oBACH,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;gBAC5B,CAAC;gBAAC,OAAO,GAAQ,EAAE,CAAC;oBAClB,UAAU,GAAG,UAAU,aAAV,UAAU,cAAV,UAAU,GAAI,GAAG,CAAC;oBAC/B,wBAAwB,GAAG,IAAI,CAAC;gBAClC,CAAC;YACH,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,IAAI,EAAE,CAAC;YACd,CAAC;QACH,CAAC;QAED,IAAI,UAAU,EAAE,CAAC;YACf,MAAM,UAAU,CAAC;QACnB,CAAC;IACH,CAAC;CACF;AAjCD,sCAiCC","sourcesContent":["import { BuildFunctionById } from './BuildFunction.js';\nimport { BuildStep } from './BuildStep.js';\nimport { BuildStepGlobalContext } from './BuildStepContext.js';\n\nexport class BuildWorkflow {\n  public readonly buildSteps: BuildStep[];\n  public readonly buildFunctions: BuildFunctionById;\n\n  constructor(\n    // @ts-expect-error ctx is not used in this class but let's keep it here for consistency\n    private readonly ctx: BuildStepGlobalContext,\n    { buildSteps, buildFunctions }: { buildSteps: BuildStep[]; buildFunctions: BuildFunctionById }\n  ) {\n    this.buildSteps = buildSteps;\n    this.buildFunctions = buildFunctions;\n  }\n\n  public async executeAsync(): Promise<void> {\n    let maybeError: Error | null = null;\n    let hasAnyPreviousStepFailed = false;\n    for (const step of this.buildSteps) {\n      if (step.shouldExecuteStep(hasAnyPreviousStepFailed)) {\n        try {\n          await step.executeAsync();\n        } catch (err: any) {\n          maybeError = maybeError ?? err;\n          hasAnyPreviousStepFailed = true;\n        }\n      } else {\n        step.skip();\n      }\n    }\n\n    if (maybeError) {\n      throw maybeError;\n    }\n  }\n}\n"]}