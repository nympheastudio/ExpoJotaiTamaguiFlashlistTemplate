{"version":3,"sources":["MaskedText.tsx"],"names":["React","Text","mask","MaskedText","children","text","pattern","type","options","rest"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAgC,cAAhC;AACA,SAASC,IAAT,QAAqB,eAArB;AAUA,OAAO,SAASC,UAAT,OAMsC;AAAA,MANlB;AACzBC,IAAAA,QAAQ,EAAEC,IADe;AAEzBH,IAAAA,IAAI,EAAEI,OAAO,GAAG,EAFS;AAGzBC,IAAAA,IAAI,GAAG,QAHkB;AAIzBC,IAAAA,OAAO,GAAG,EAJe;AAKzB,OAAGC;AALsB,GAMkB;AAC3C,sBAAO,oBAAC,IAAD,EAAUA,IAAV,EAAiBP,IAAI,CAACG,IAAD,EAAOC,OAAP,EAAgBC,IAAhB,EAAsBC,OAAtB,CAArB,CAAP;AACD","sourcesContent":["import React from 'react'\nimport { Text, TextProps } from 'react-native'\nimport { mask } from '../utils/mask'\nimport type { MaskOptions } from '../@types/MaskOptions'\n\nexport interface MaskedTextProps {\n  children: string\n  mask?: string\n  type?: 'custom' | 'currency'\n  options?: MaskOptions\n}\n\nexport function MaskedText({\n  children: text,\n  mask: pattern = '',\n  type = 'custom',\n  options = {} as MaskOptions,\n  ...rest\n}: MaskedTextProps & TextProps): JSX.Element {\n  return <Text {...rest}>{mask(text, pattern, type, options)}</Text>;\n}\n"]}