{"version":3,"file":"expoconfig.js","sourceRoot":"","sources":["../../../../../src/js/tools/vendor/expo/expoconfig.ts"],"names":[],"mappings":"AAAA,wBAAwB","sourcesContent":["// The MIT License (MIT)\n\n// Copyright (c) 2015-present 650 Industries, Inc. (aka Expo)\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { MixedOutput, Module, ReadOnlyGraph } from 'metro';\n\n// https://github.com/expo/expo/blob/44d03f59e25b01fbfee82075da18dd7f8ce44e96/packages/%40expo/metro-config/src/ExpoMetroConfig.ts\nexport interface DefaultConfigOptions {\n  /** @deprecated */\n  mode?: 'exotic';\n  /**\n   * **Experimental:** Enable CSS support for Metro web, and shim on native.\n   *\n   * This is an experimental feature and may change in the future. The underlying implementation\n   * is subject to change, and native support for CSS Modules may be added in the future during a non-major SDK release.\n   */\n  isCSSEnabled?: boolean;\n  /**\n   * **Experimental:** Modify premodules before a code asset is serialized\n   *\n   * This is an experimental feature and may change in the future. The underlying implementation\n   * is subject to change.\n   */\n  unstable_beforeAssetSerializationPlugins?: ((serializationInput: {\n    graph: ReadOnlyGraph<MixedOutput>;\n    premodules: Module[];\n    debugId?: string;\n  }) => Module[])[];\n}\n"]}