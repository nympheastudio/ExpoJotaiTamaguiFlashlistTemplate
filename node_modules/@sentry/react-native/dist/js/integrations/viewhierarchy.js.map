{"version":3,"file":"viewhierarchy.js","sourceRoot":"","sources":["../../../src/js/integrations/viewhierarchy.ts"],"names":[],"mappings":";AAEA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AAEpC,yCAAyC;AACzC,MAAM,OAAO,aAAa;IAA1B;QAUE;;WAEG;QACI,SAAI,GAAW,aAAa,CAAC,EAAE,CAAC;IAkCzC,CAAC;IAhCC;;OAEG;IACI,SAAS,CAAC,uBAAoD;QACnE,uBAAuB,CAAC,CAAO,KAAY,EAAE,IAAe,EAAE,EAAE;YAC9D,MAAM,YAAY,GAAG,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YACpG,IAAI,CAAC,YAAY,EAAE;gBACjB,OAAO,KAAK,CAAC;aACd;YAED,IAAI,aAAa,GAAsB,IAAI,CAAC;YAC5C,IAAI;gBACF,aAAa,GAAG,MAAM,MAAM,CAAC,kBAAkB,EAAE,CAAC;aACnD;YAAC,OAAO,CAAC,EAAE;gBACV,MAAM,CAAC,KAAK,CAAC,2CAA2C,EAAE,CAAC,CAAC,CAAC;aAC9D;YAED,IAAI,aAAa,EAAE;gBACjB,IAAI,CAAC,WAAW,GAAG;oBACjB;wBACE,QAAQ,EAAE,aAAa,CAAC,SAAS;wBACjC,WAAW,EAAE,aAAa,CAAC,YAAY;wBACvC,cAAc,EAAE,aAAa,CAAC,eAAe;wBAC7C,IAAI,EAAE,aAAa;qBACpB;oBACD,GAAG,CAAC,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,WAAW,KAAI,EAAE,CAAC;iBAC7B,CAAC;aACH;YAED,OAAO,KAAK,CAAC;QACf,CAAC,CAAA,CAAC,CAAC;IACL,CAAC;;AA7CD;;GAEG;AACW,gBAAE,GAAW,eAAe,CAAC;AAE5B,uBAAS,GAAW,qBAAqB,CAAC;AAC1C,0BAAY,GAAW,kBAAkB,CAAC;AAC1C,6BAAe,GAAmB,sBAAwC,CAAC","sourcesContent":["import type { Event, EventHint, EventProcessor, Integration } from '@sentry/types';\nimport type { AttachmentType } from '@sentry/types/types/attachment';\nimport { logger } from '@sentry/utils';\n\nimport { NATIVE } from '../wrapper';\n\n/** Adds ViewHierarchy to error events */\nexport class ViewHierarchy implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'ViewHierarchy';\n\n  private static _fileName: string = 'view-hierarchy.json';\n  private static _contentType: string = 'application/json';\n  private static _attachmentType: AttachmentType = 'event.view_hierarchy' as AttachmentType;\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = ViewHierarchy.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (e: EventProcessor) => void): void {\n    addGlobalEventProcessor(async (event: Event, hint: EventHint) => {\n      const hasException = event.exception && event.exception.values && event.exception.values.length > 0;\n      if (!hasException) {\n        return event;\n      }\n\n      let viewHierarchy: Uint8Array | null = null;\n      try {\n        viewHierarchy = await NATIVE.fetchViewHierarchy();\n      } catch (e) {\n        logger.error('Failed to get view hierarchy from native.', e);\n      }\n\n      if (viewHierarchy) {\n        hint.attachments = [\n          {\n            filename: ViewHierarchy._fileName,\n            contentType: ViewHierarchy._contentType,\n            attachmentType: ViewHierarchy._attachmentType,\n            data: viewHierarchy,\n          },\n          ...(hint?.attachments || []),\n        ];\n      }\n\n      return event;\n    });\n  }\n}\n"]}