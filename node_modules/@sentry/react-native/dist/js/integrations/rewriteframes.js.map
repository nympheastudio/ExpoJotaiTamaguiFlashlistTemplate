{"version":3,"file":"rewriteframes.js","sourceRoot":"","sources":["../../../src/js/integrations/rewriteframes.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AAErD,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAExC,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAE/D,MAAM,CAAC,MAAM,2BAA2B,GAAG,6BAA6B,CAAC;AACzE,MAAM,CAAC,MAAM,uBAAuB,GAAG,sBAAsB,CAAC;AAE9D;;;;;GAKG;AACH,MAAM,UAAU,8BAA8B;IAC5C,OAAO,IAAI,aAAa,CAAC;QACvB,QAAQ,EAAE,CAAC,KAAiB,EAAE,EAAE;YAC9B,IAAI,KAAK,CAAC,QAAQ,KAAK,MAAM,IAAI,KAAK,CAAC,QAAQ,KAAK,OAAO,EAAE;gBAC3D,sDAAsD;gBACtD,4CAA4C;gBAC5C,OAAO,KAAK,CAAC;aACd;YAED,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACnB,OAAO,KAAK,CAAC;aACd;YACD,OAAO,KAAK,CAAC,QAAQ,CAAC;YAEtB,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ;iBAC5B,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;iBACzB,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC;iBAC3B,OAAO,CAAC,qCAAqC,EAAE,EAAE,CAAC,CAAC;YAEtD,IAAI,KAAK,CAAC,QAAQ,KAAK,eAAe,IAAI,KAAK,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBACrE,OAAO,KAAK,CAAC;aACd;YACD,wBAAwB;YAExB,4DAA4D;YAC5D,IAAI,eAAe,EAAE,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,SAAS,EAAE;gBACxE,oEAAoE;gBACpE,yFAAyF;gBACzF,wEAAwE;gBACxE,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC;aAClB;YAED,4CAA4C;YAC5C,IAAI,MAAM,EAAE,IAAI,QAAQ,CAAC,EAAE,KAAK,SAAS,EAAE;gBACzC,KAAK,CAAC,QAAQ,GAAG,2BAA2B,CAAC;gBAC7C,OAAO,KAAK,CAAC;aACd;YAED,IAAI,MAAM,EAAE,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;gBACrC,KAAK,CAAC,QAAQ,GAAG,uBAAuB,CAAC;gBACzC,OAAO,KAAK,CAAC;aACd;YAED,MAAM,SAAS,GAAG,QAAQ,CAAC;YAC3B,+DAA+D;YAC/D,IAAI,KAAK,CAAC,QAAQ,KAAK,sBAAsB,EAAE;gBAC7C,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;aACtB;YACD,wCAAwC;YACxC,KAAK,CAAC,QAAQ;gBACZ,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,SAAS,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;YACzG,OAAO,KAAK,CAAC;QACf,CAAC;KACF,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { RewriteFrames } from '@sentry/integrations';\nimport type { Integration, StackFrame } from '@sentry/types';\nimport { Platform } from 'react-native';\n\nimport { isExpo, isHermesEnabled } from '../utils/environment';\n\nexport const ANDROID_DEFAULT_BUNDLE_NAME = 'app:///index.android.bundle';\nexport const IOS_DEFAULT_BUNDLE_NAME = 'app:///main.jsbundle';\n\n/**\n * Creates React Native default rewrite frames integration\n * which appends app:// to the beginning of the filename\n * and removes file://, 'address at' prefixes, CodePush postfix,\n * and Expo bundle postfix.\n */\nexport function createReactNativeRewriteFrames(): Integration {\n  return new RewriteFrames({\n    iteratee: (frame: StackFrame) => {\n      if (frame.platform === 'java' || frame.platform === 'cocoa') {\n        // Because platform is not required in StackFrame type\n        // we assume that if not set it's javascript\n        return frame;\n      }\n\n      if (!frame.filename) {\n        return frame;\n      }\n      delete frame.abs_path;\n\n      frame.filename = frame.filename\n        .replace(/^file:\\/\\//, '')\n        .replace(/^address at /, '')\n        .replace(/^.*\\/[^.]+(\\.app|CodePush|.*(?=\\/))/, '');\n\n      if (frame.filename === '[native code]' || frame.filename === 'native') {\n        return frame;\n      }\n      // Is React Native frame\n\n      // Check Hermes Bytecode Frame and convert to 1-based column\n      if (isHermesEnabled() && frame.lineno === 1 && frame.colno !== undefined) {\n        // hermes bytecode columns are 0-based, while v8 and jsc are 1-based\n        // Hermes frames without debug info have always line = 1 and col points to a bytecode pos\n        // https://github.com/facebook/react/issues/21792#issuecomment-873171991\n        frame.colno += 1;\n      }\n\n      // Expo adds hash to the end of bundle names\n      if (isExpo() && Platform.OS === 'android') {\n        frame.filename = ANDROID_DEFAULT_BUNDLE_NAME;\n        return frame;\n      }\n\n      if (isExpo() && Platform.OS === 'ios') {\n        frame.filename = IOS_DEFAULT_BUNDLE_NAME;\n        return frame;\n      }\n\n      const appPrefix = 'app://';\n      // https://github.com/getsentry/sentry-react-native/issues/3348\n      if (frame.filename === '/InternalBytecode.js') {\n        frame.in_app = false;\n      }\n      // We always want to have a triple slash\n      frame.filename =\n        frame.filename.indexOf('/') === 0 ? `${appPrefix}${frame.filename}` : `${appPrefix}/${frame.filename}`;\n      return frame;\n    },\n  });\n}\n"]}