{"version":3,"file":"default.js","sourceRoot":"","sources":["../../../src/js/integrations/default.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpClient } from '@sentry/integrations';\nimport { Integrations as BrowserReactIntegrations } from '@sentry/react';\nimport type { Integration } from '@sentry/types';\n\nimport type { ReactNativeClientOptions } from '../options';\nimport { HermesProfiling } from '../profiling/integration';\nimport { ReactNativeTracing } from '../tracing';\nimport { isExpoGo, notWeb } from '../utils/environment';\nimport { DebugSymbolicator } from './debugsymbolicator';\nimport { DeviceContext } from './devicecontext';\nimport { EventOrigin } from './eventorigin';\nimport { ExpoContext } from './expocontext';\nimport { ModulesLoader } from './modulesloader';\nimport { NativeLinkedErrors } from './nativelinkederrors';\nimport { ReactNativeErrorHandlers } from './reactnativeerrorhandlers';\nimport { ReactNativeInfo } from './reactnativeinfo';\nimport { Release } from './release';\nimport { createReactNativeRewriteFrames } from './rewriteframes';\nimport { Screenshot } from './screenshot';\nimport { SdkInfo } from './sdkinfo';\nimport { Spotlight } from './spotlight';\nimport { ViewHierarchy } from './viewhierarchy';\n\n/**\n * Returns the default ReactNative integrations based on the current environment.\n *\n * Native integrations are only returned when native is enabled.\n *\n * Web integrations are only returned when running on web.\n */\nexport function getDefaultIntegrations(options: ReactNativeClientOptions): Integration[] {\n  const integrations: Integration[] = [];\n\n  if (notWeb()) {\n    integrations.push(\n      new ReactNativeErrorHandlers({\n        patchGlobalPromise: options.patchGlobalPromise,\n      }),\n    );\n    integrations.push(new NativeLinkedErrors());\n  } else {\n    integrations.push(new BrowserReactIntegrations.TryCatch());\n    integrations.push(new BrowserReactIntegrations.GlobalHandlers());\n    integrations.push(new BrowserReactIntegrations.LinkedErrors());\n  }\n\n  // @sentry/react default integrations\n  integrations.push(new BrowserReactIntegrations.InboundFilters());\n  integrations.push(new BrowserReactIntegrations.FunctionToString());\n  integrations.push(new BrowserReactIntegrations.Breadcrumbs());\n  integrations.push(new BrowserReactIntegrations.Dedupe());\n  integrations.push(new BrowserReactIntegrations.HttpContext());\n  // end @sentry/react-native default integrations\n\n  integrations.push(new Release());\n  integrations.push(new EventOrigin());\n  integrations.push(new SdkInfo());\n  integrations.push(new ReactNativeInfo());\n\n  if (__DEV__ && notWeb()) {\n    integrations.push(new DebugSymbolicator());\n  }\n\n  integrations.push(createReactNativeRewriteFrames());\n\n  if (options.enableNative) {\n    integrations.push(new DeviceContext());\n    integrations.push(new ModulesLoader());\n    if (options.attachScreenshot) {\n      integrations.push(new Screenshot());\n    }\n    if (options.attachViewHierarchy) {\n      integrations.push(new ViewHierarchy());\n    }\n    if (options._experiments && typeof options._experiments.profilesSampleRate === 'number') {\n      integrations.push(new HermesProfiling());\n    }\n  }\n\n  // hasTracingEnabled from `@sentry/core` only check if tracesSampler or tracesSampleRate keys are present\n  // that's different from prev imp here and might lead misconfiguration\n  // `tracesSampleRate: undefined` should not enable tracing\n  const hasTracingEnabled =\n    options.enableTracing ||\n    typeof options.tracesSampleRate === 'number' ||\n    typeof options.tracesSampler === 'function';\n  if (hasTracingEnabled && options.enableAutoPerformanceTracing) {\n    integrations.push(new ReactNativeTracing());\n  }\n  if (options.enableCaptureFailedRequests) {\n    integrations.push(new HttpClient());\n  }\n\n  if (isExpoGo()) {\n    integrations.push(new ExpoContext());\n  }\n\n  if (options.enableSpotlight) {\n    integrations.push(\n      Spotlight({\n        sidecarUrl: options.spotlightSidecarUrl,\n      }),\n    );\n  }\n\n  return integrations;\n}\n"]}