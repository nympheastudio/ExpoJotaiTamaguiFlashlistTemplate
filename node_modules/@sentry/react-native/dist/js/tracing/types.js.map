{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/js/tracing/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { TransactionContext } from '@sentry/types';\n\nexport interface ReactNavigationRoute {\n  name: string;\n  key: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  params: Record<string, any>;\n}\n\nexport interface ReactNavigationCurrentRoute extends ReactNavigationRoute {\n  hasBeenSeen: boolean;\n}\n\nexport type RouteChangeContextData = {\n  previousRoute?: {\n    [key: string]: unknown;\n    name: string;\n  } | null;\n  route: {\n    [key: string]: unknown;\n    name: string;\n    hasBeenSeen: boolean;\n  };\n};\n\nexport interface ReactNavigationTransactionContext extends TransactionContext {\n  tags: {\n    'routing.instrumentation': string;\n    'routing.route.name': string;\n  };\n  data: RouteChangeContextData;\n}\n\nexport type BeforeNavigate = (context: TransactionContext) => TransactionContext;\n"]}