{"version":3,"file":"reactnativeinfo.js","sourceRoot":"","sources":["../../../src/js/integrations/reactnativeinfo.ts"],"names":[],"mappings":";AAEA,OAAO,EACL,gBAAgB,EAChB,iBAAiB,EACjB,gBAAgB,EAChB,qBAAqB,EACrB,MAAM,EACN,eAAe,EACf,eAAe,EACf,oBAAoB,GACrB,MAAM,sBAAsB,CAAC;AAgB9B,4CAA4C;AAC5C,MAAM,OAAO,eAAe;IAA5B;QAME;;WAEG;QACI,SAAI,GAAW,eAAe,CAAC,EAAE,CAAC;IAwD3C,CAAC;IAtDC;;OAEG;IACI,SAAS,CAAC,uBAA2D;QAC1E,uBAAuB,CAAC,CAAO,KAAY,EAAE,IAAgB,EAAE,EAAE;YAC/D,MAAM,gBAAgB,GAAG,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,iBAAiB,EAAC,CAAC,CAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,iBAAsC,CAAC,CAAC,CAAC,SAAS,CAAC;YAE7G,MAAM,kBAAkB,GAAuB;gBAC7C,YAAY,EAAE,oBAAoB,EAAE;gBACpC,MAAM,EAAE,eAAe,EAAE;gBACzB,oBAAoB,EAAE,qBAAqB,EAAE;gBAC7C,IAAI,EAAE,MAAM,EAAE;aACf,CAAC;YAEF,IAAI,eAAe,EAAE,EAAE;gBACrB,kBAAkB,CAAC,SAAS,GAAG,QAAQ,CAAC;gBACxC,MAAM,aAAa,GAAG,gBAAgB,EAAE,CAAC;gBACzC,IAAI,aAAa,EAAE;oBACjB,kBAAkB,CAAC,cAAc,GAAG,aAAa,CAAC;iBACnD;gBACD,kBAAkB,CAAC,iBAAiB,GAAG,CAAC,+BAA+B,CAAC,KAAK,CAAC,CAAC;aAChF;iBAAM,IAAI,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,QAAQ,EAAE;gBACrC,kBAAkB,CAAC,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC;aAC1D;YAED,IAAI,kBAAkB,CAAC,SAAS,KAAK,QAAQ,EAAE;gBAC7C,KAAK,CAAC,IAAI,mBACR,MAAM,EAAE,MAAM,IACX,KAAK,CAAC,IAAI,CACd,CAAC;aACH;YAED,IAAI,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,cAAc,EAAE;gBACpC,kBAAkB,CAAC,eAAe,GAAG,gBAAgB,CAAC,cAAc,CAAC;aACtE;YAED,MAAM,aAAa,GAAG,gBAAgB,EAAE,CAAC;YACzC,IAAI,aAAa,EAAE;gBACjB,kBAAkB,CAAC,eAAe,GAAG,aAAa,CAAC;aACpD;YAED,MAAM,cAAc,GAAG,iBAAiB,EAAE,CAAC;YAC3C,IAAI,cAAc,EAAE;gBAClB,kBAAkB,CAAC,gBAAgB,GAAG,cAAc,CAAC;aACtD;YAED,KAAK,CAAC,QAAQ,mBACZ,oBAAoB,EAAE,kBAAkB,IACrC,KAAK,CAAC,QAAQ,CAClB,CAAC;YAEF,OAAO,KAAK,CAAC;QACf,CAAC,CAAA,CAAC,CAAC;IACL,CAAC;;AA/DD;;GAEG;AACW,kBAAE,GAAW,iBAAiB,CAAC;AA+D/C;;;;;;;;;;;;;;;;GAgBG;AACH,SAAS,+BAA+B,CAAC,KAAY;;IACnD,KAAK,MAAM,KAAK,IAAI,CAAA,MAAA,KAAK,CAAC,SAAS,0CAAE,MAAM,MAAI,MAAA,KAAK,CAAC,OAAO,0CAAE,MAAM,CAAA,IAAI,EAAE,EAAE;QAC1E,KAAK,MAAM,KAAK,IAAI,CAAA,MAAA,KAAK,CAAC,UAAU,0CAAE,MAAM,KAAI,EAAE,EAAE;YAClD,mGAAmG;YACnG,IAAI,KAAK,CAAC,QAAQ,KAAK,SAAS,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtD,OAAO,IAAI,CAAC;aACb;SACF;KACF;IACD,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import type { Context, Event, EventHint, EventProcessor, Integration } from '@sentry/types';\n\nimport {\n  getExpoGoVersion,\n  getExpoSdkVersion,\n  getHermesVersion,\n  getReactNativeVersion,\n  isExpo,\n  isFabricEnabled,\n  isHermesEnabled,\n  isTurboModuleEnabled,\n} from '../utils/environment';\nimport type { ReactNativeError } from './debugsymbolicator';\n\nexport interface ReactNativeContext extends Context {\n  js_engine?: string;\n  turbo_module: boolean;\n  fabric: boolean;\n  expo: boolean;\n  hermes_version?: string;\n  react_native_version?: string;\n  component_stack?: string;\n  hermes_debug_info?: boolean;\n  expo_go_version?: string;\n  expo_sdk_version?: string;\n}\n\n/** Loads React Native context at runtime */\nexport class ReactNativeInfo implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'ReactNativeInfo';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = ReactNativeInfo.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void): void {\n    addGlobalEventProcessor(async (event: Event, hint?: EventHint) => {\n      const reactNativeError = hint?.originalException ? (hint?.originalException as ReactNativeError) : undefined;\n\n      const reactNativeContext: ReactNativeContext = {\n        turbo_module: isTurboModuleEnabled(),\n        fabric: isFabricEnabled(),\n        react_native_version: getReactNativeVersion(),\n        expo: isExpo(),\n      };\n\n      if (isHermesEnabled()) {\n        reactNativeContext.js_engine = 'hermes';\n        const hermesVersion = getHermesVersion();\n        if (hermesVersion) {\n          reactNativeContext.hermes_version = hermesVersion;\n        }\n        reactNativeContext.hermes_debug_info = !isEventWithHermesBytecodeFrames(event);\n      } else if (reactNativeError?.jsEngine) {\n        reactNativeContext.js_engine = reactNativeError.jsEngine;\n      }\n\n      if (reactNativeContext.js_engine === 'hermes') {\n        event.tags = {\n          hermes: 'true',\n          ...event.tags,\n        };\n      }\n\n      if (reactNativeError?.componentStack) {\n        reactNativeContext.component_stack = reactNativeError.componentStack;\n      }\n\n      const expoGoVersion = getExpoGoVersion();\n      if (expoGoVersion) {\n        reactNativeContext.expo_go_version = expoGoVersion;\n      }\n\n      const expoSdkVersion = getExpoSdkVersion();\n      if (expoSdkVersion) {\n        reactNativeContext.expo_sdk_version = expoSdkVersion;\n      }\n\n      event.contexts = {\n        react_native_context: reactNativeContext,\n        ...event.contexts,\n      };\n\n      return event;\n    });\n  }\n}\n\n/**\n * Guess if the event contains frames with Hermes bytecode\n * (thus Hermes bundle doesn't contain debug info)\n * based on the event exception/threads frames.\n *\n * This function can be relied on only if Hermes is enabled!\n *\n * Hermes bytecode position is always line 1 and column 0-based number.\n * If Hermes bundle has debug info, the bytecode frames pos are calculated\n * back to the plain bundle source code positions and line will be > 1.\n *\n * Line 1 contains start time var, it's safe to assume it won't crash.\n * The above only applies when Hermes is enabled.\n *\n * Javascript/Hermes bytecode frames have platform === undefined.\n * Native (Java, ObjC, C++) frames have platform === 'android'/'ios'/'native'.\n */\nfunction isEventWithHermesBytecodeFrames(event: Event): boolean {\n  for (const value of event.exception?.values || event.threads?.values || []) {\n    for (const frame of value.stacktrace?.frames || []) {\n      // platform === undefined we assume it's javascript (only native frames use the platform attribute)\n      if (frame.platform === undefined && frame.lineno === 1) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n"]}