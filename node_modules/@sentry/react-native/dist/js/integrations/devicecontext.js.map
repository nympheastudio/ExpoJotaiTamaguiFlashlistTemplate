{"version":3,"file":"devicecontext.js","sourceRoot":"","sources":["../../../src/js/integrations/devicecontext.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable complexity */\nimport type { Event, EventProcessor, Hub, Integration } from '@sentry/types';\nimport { logger, severityLevelFromString } from '@sentry/utils';\nimport { AppState } from 'react-native';\n\nimport { breadcrumbFromObject } from '../breadcrumb';\nimport type { NativeDeviceContextsResponse } from '../NativeRNSentry';\nimport { NATIVE } from '../wrapper';\n\n/** Load device context from native. */\nexport class DeviceContext implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'DeviceContext';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = DeviceContext.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor(async (event: Event) => {\n      const self = getCurrentHub().getIntegration(DeviceContext);\n      if (!self) {\n        return event;\n      }\n\n      let native: NativeDeviceContextsResponse | null = null;\n      try {\n        native = await NATIVE.fetchNativeDeviceContexts();\n      } catch (e) {\n        logger.log(`Failed to get device context from native: ${e}`);\n      }\n\n      if (!native) {\n        return event;\n      }\n\n      const nativeUser = native.user;\n      if (!event.user && nativeUser) {\n        event.user = nativeUser;\n      }\n\n      let nativeContexts = native.contexts;\n      if (AppState.currentState !== 'unknown') {\n        nativeContexts = nativeContexts || {};\n        nativeContexts.app = {\n          ...nativeContexts.app,\n          in_foreground: AppState.currentState === 'active',\n        };\n      }\n      if (nativeContexts) {\n        event.contexts = { ...nativeContexts, ...event.contexts };\n        if (nativeContexts.app) {\n          event.contexts.app = { ...nativeContexts.app, ...event.contexts.app };\n        }\n      }\n\n      const nativeTags = native.tags;\n      if (nativeTags) {\n        event.tags = { ...nativeTags, ...event.tags };\n      }\n\n      const nativeExtra = native.extra;\n      if (nativeExtra) {\n        event.extra = { ...nativeExtra, ...event.extra };\n      }\n\n      const nativeFingerprint = native.fingerprint;\n      if (nativeFingerprint) {\n        event.fingerprint = (event.fingerprint ?? []).concat(\n          nativeFingerprint.filter(item => (event.fingerprint ?? []).indexOf(item) < 0),\n        );\n      }\n\n      const nativeLevel = typeof native['level'] === 'string' ? severityLevelFromString(native['level']) : undefined;\n      if (!event.level && nativeLevel) {\n        event.level = nativeLevel;\n      }\n\n      const nativeEnvironment = native['environment'];\n      if (!event.environment && nativeEnvironment) {\n        event.environment = nativeEnvironment;\n      }\n\n      const nativeBreadcrumbs = Array.isArray(native['breadcrumbs'])\n        ? native['breadcrumbs'].map(breadcrumbFromObject)\n        : undefined;\n      if (nativeBreadcrumbs) {\n        event.breadcrumbs = nativeBreadcrumbs;\n      }\n\n      return event;\n    });\n  }\n}\n"]}