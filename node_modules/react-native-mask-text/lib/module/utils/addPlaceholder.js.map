{"version":3,"sources":["addPlaceholder.ts"],"names":["DIGIT","ALPHA","ALPHANUM","addPlaceholder","output","index","placeholder","newIndex","length"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAuC,aAAvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CACEC,MADF,EAEEC,KAFF,EAGEC,WAHF,EAIY;AACV,OAAK,IAAIC,QAAQ,GAAGF,KAApB,EAA2BE,QAAQ,GAAGH,MAAM,CAACI,MAA7C,EAAqDD,QAAQ,EAA7D,EAAiE;AAC/D,QACEH,MAAM,CAACG,QAAD,CAAN,KAAqBP,KAArB,IACAI,MAAM,CAACG,QAAD,CAAN,KAAqBN,KADrB,IAEAG,MAAM,CAACG,QAAD,CAAN,KAAqBL,QAHvB,EAIE;AACA;AACAE,MAAAA,MAAM,CAACG,QAAD,CAAN,GAAmBD,WAAnB;AACD;AACF;;AACD,SAAOF,MAAP;AACD;;AAED,eAAeD,cAAf","sourcesContent":["import { DIGIT, ALPHA, ALPHANUM } from './constants'\n\n/**\n * function addPlaceholder\n * @param {string[]} output\n * @param {number} index\n * @param {string} placeholder\n * @returns {string[]}\n */\nfunction addPlaceholder(\n  output: string[],\n  index: number,\n  placeholder: string\n): string[] {\n  for (let newIndex = index; newIndex < output.length; newIndex++) {\n    if (\n      output[newIndex] === DIGIT ||\n      output[newIndex] === ALPHA ||\n      output[newIndex] === ALPHANUM\n    ) {\n      // eslint-disable-next-line no-param-reassign\n      output[newIndex] = placeholder\n    }\n  }\n  return output\n}\n\nexport default addPlaceholder\n"]}