export class BuildWorkflow {
    constructor(
    // @ts-expect-error ctx is not used in this class but let's keep it here for consistency
    ctx, { buildSteps, buildFunctions }) {
        this.ctx = ctx;
        this.buildSteps = buildSteps;
        this.buildFunctions = buildFunctions;
    }
    async executeAsync() {
        let maybeError = null;
        let hasAnyPreviousStepFailed = false;
        for (const step of this.buildSteps) {
            if (step.shouldExecuteStep(hasAnyPreviousStepFailed)) {
                try {
                    await step.executeAsync();
                }
                catch (err) {
                    maybeError = maybeError !== null && maybeError !== void 0 ? maybeError : err;
                    hasAnyPreviousStepFailed = true;
                }
            }
            else {
                step.skip();
            }
        }
        if (maybeError) {
            throw maybeError;
        }
    }
}
//# sourceMappingURL=BuildWorkflow.js.map